//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by SlSvcUtil, version 5.0.61118.0
// 
namespace LazuriteMobile.Android.ServiceClient
{

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "LazuriteMobile.Android.ServiceClient.IServer")]
    public interface IServer
    {

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IServer/IsScenarioValueChanged", ReplyAction = "http://tempuri.org/IServer/IsScenarioValueChangedResponse")]
        System.IAsyncResult BeginIsScenarioValueChanged(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> lastKnownValue, System.AsyncCallback callback, object asyncState);

        bool EndIsScenarioValueChanged(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IServer/GetScenariosInfo", ReplyAction = "http://tempuri.org/IServer/GetScenariosInfoResponse")]
        System.IAsyncResult BeginGetScenariosInfo(System.AsyncCallback callback, object asyncState);

        Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfo> EndGetScenariosInfo(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IServer/GetScenarioInfo", ReplyAction = "http://tempuri.org/IServer/GetScenarioInfoResponse")]
        System.IAsyncResult BeginGetScenarioInfo(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, System.AsyncCallback callback, object asyncState);

        Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.ScenarioInfo> EndGetScenarioInfo(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IServer/CalculateScenarioValue", ReplyAction = "http://tempuri.org/IServer/CalculateScenarioValueResponse")]
        System.IAsyncResult BeginCalculateScenarioValue(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, System.AsyncCallback callback, object asyncState);

        Lazurite.MainDomain.MessageSecurity.Encrypted<string> EndCalculateScenarioValue(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IServer/GetScenarioValue", ReplyAction = "http://tempuri.org/IServer/GetScenarioValueResponse")]
        System.IAsyncResult BeginGetScenarioValue(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, System.AsyncCallback callback, object asyncState);

        Lazurite.MainDomain.MessageSecurity.Encrypted<string> EndGetScenarioValue(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IServer/ExecuteScenario", ReplyAction = "http://tempuri.org/IServer/ExecuteScenarioResponse")]
        System.IAsyncResult BeginExecuteScenario(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, System.AsyncCallback callback, object asyncState);

        void EndExecuteScenario(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IServer/AsyncExecuteScenario", ReplyAction = "http://tempuri.org/IServer/AsyncExecuteScenarioResponse")]
        System.IAsyncResult BeginAsyncExecuteScenario(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, System.AsyncCallback callback, object asyncState);

        void EndAsyncExecuteScenario(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IServer/AsyncExecuteScenarioParallel", ReplyAction = "http://tempuri.org/IServer/AsyncExecuteScenarioParallelResponse")]
        System.IAsyncResult BeginAsyncExecuteScenarioParallel(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, System.AsyncCallback callback, object asyncState);

        void EndAsyncExecuteScenarioParallel(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IServer/GetChangedScenarios", ReplyAction = "http://tempuri.org/IServer/GetChangedScenariosResponse")]
        System.IAsyncResult BeginGetChangedScenarios(System.DateTime since, System.AsyncCallback callback, object asyncState);

        Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfoLW> EndGetChangedScenarios(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IServer/SaveVisualSettings", ReplyAction = "http://tempuri.org/IServer/SaveVisualSettingsResponse")]
        System.IAsyncResult BeginSaveVisualSettings(Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.UserVisualSettings> visualSettings, System.AsyncCallback callback, object asyncState);

        void EndSaveVisualSettings(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IServer/SyncAddictionalData", ReplyAction = "http://tempuri.org/IServer/SyncAddictionalDataResponse")]
        System.IAsyncResult BeginSyncAddictionalData(Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.AddictionalData> data, System.AsyncCallback callback, object asyncState);

        Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.AddictionalData> EndSyncAddictionalData(System.IAsyncResult result);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerChannel : LazuriteMobile.Android.ServiceClient.IServer, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsScenarioValueChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public IsScenarioValueChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            results = results;
        }

        public bool Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetScenariosInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetScenariosInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            results = results;
        }

        public Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfo> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfo>)(results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetScenarioInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetScenarioInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            results = results;
        }

        public Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.ScenarioInfo> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.ScenarioInfo>)(results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculateScenarioValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public CalculateScenarioValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            results = results;
        }

        public Lazurite.MainDomain.MessageSecurity.Encrypted<string> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetScenarioValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetScenarioValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            results = results;
        }

        public Lazurite.MainDomain.MessageSecurity.Encrypted<string> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetChangedScenariosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetChangedScenariosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            results = results;
        }

        public Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfoLW> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfoLW>)(results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SyncAddictionalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public SyncAddictionalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            results = results;
        }

        public Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.AddictionalData> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.AddictionalData>)(results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServerClient : System.ServiceModel.ClientBase<LazuriteMobile.Android.ServiceClient.IServer>, LazuriteMobile.Android.ServiceClient.IServer
    {

        private BeginOperationDelegate onBeginIsScenarioValueChangedDelegate;

        private EndOperationDelegate onEndIsScenarioValueChangedDelegate;

        private System.Threading.SendOrPostCallback onIsScenarioValueChangedCompletedDelegate;

        private BeginOperationDelegate onBeginGetScenariosInfoDelegate;

        private EndOperationDelegate onEndGetScenariosInfoDelegate;

        private System.Threading.SendOrPostCallback onGetScenariosInfoCompletedDelegate;

        private BeginOperationDelegate onBeginGetScenarioInfoDelegate;

        private EndOperationDelegate onEndGetScenarioInfoDelegate;

        private System.Threading.SendOrPostCallback onGetScenarioInfoCompletedDelegate;

        private BeginOperationDelegate onBeginCalculateScenarioValueDelegate;

        private EndOperationDelegate onEndCalculateScenarioValueDelegate;

        private System.Threading.SendOrPostCallback onCalculateScenarioValueCompletedDelegate;

        private BeginOperationDelegate onBeginGetScenarioValueDelegate;

        private EndOperationDelegate onEndGetScenarioValueDelegate;

        private System.Threading.SendOrPostCallback onGetScenarioValueCompletedDelegate;

        private BeginOperationDelegate onBeginExecuteScenarioDelegate;

        private EndOperationDelegate onEndExecuteScenarioDelegate;

        private System.Threading.SendOrPostCallback onExecuteScenarioCompletedDelegate;

        private BeginOperationDelegate onBeginAsyncExecuteScenarioDelegate;

        private EndOperationDelegate onEndAsyncExecuteScenarioDelegate;

        private System.Threading.SendOrPostCallback onAsyncExecuteScenarioCompletedDelegate;

        private BeginOperationDelegate onBeginAsyncExecuteScenarioParallelDelegate;

        private EndOperationDelegate onEndAsyncExecuteScenarioParallelDelegate;

        private System.Threading.SendOrPostCallback onAsyncExecuteScenarioParallelCompletedDelegate;

        private BeginOperationDelegate onBeginGetChangedScenariosDelegate;

        private EndOperationDelegate onEndGetChangedScenariosDelegate;

        private System.Threading.SendOrPostCallback onGetChangedScenariosCompletedDelegate;

        private BeginOperationDelegate onBeginSaveVisualSettingsDelegate;

        private EndOperationDelegate onEndSaveVisualSettingsDelegate;

        private System.Threading.SendOrPostCallback onSaveVisualSettingsCompletedDelegate;

        private BeginOperationDelegate onBeginSyncAddictionalDataDelegate;

        private EndOperationDelegate onEndSyncAddictionalDataDelegate;

        private System.Threading.SendOrPostCallback onSyncAddictionalDataCompletedDelegate;

        private BeginOperationDelegate onBeginOpenDelegate;

        private EndOperationDelegate onEndOpenDelegate;

        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;

        private BeginOperationDelegate onBeginCloseDelegate;

        private EndOperationDelegate onEndCloseDelegate;

        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;

        public ServerClient()
        {
        }

        public ServerClient(string endpointConfigurationName) :
                base(endpointConfigurationName)
        {
        }

        public ServerClient(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public ServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public ServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public System.Net.CookieContainer CookieContainer
        {
            get
            {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null))
                {
                    return httpCookieContainerManager.CookieContainer;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null))
                {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else
                {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }

        public event System.EventHandler<IsScenarioValueChangedCompletedEventArgs> IsScenarioValueChangedCompleted;

        public event System.EventHandler<GetScenariosInfoCompletedEventArgs> GetScenariosInfoCompleted;

        public event System.EventHandler<GetScenarioInfoCompletedEventArgs> GetScenarioInfoCompleted;

        public event System.EventHandler<CalculateScenarioValueCompletedEventArgs> CalculateScenarioValueCompleted;

        public event System.EventHandler<GetScenarioValueCompletedEventArgs> GetScenarioValueCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ExecuteScenarioCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AsyncExecuteScenarioCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AsyncExecuteScenarioParallelCompleted;

        public event System.EventHandler<GetChangedScenariosCompletedEventArgs> GetChangedScenariosCompleted;

        public event System.EventHandler<SyncAddictionalDataCompletedEventArgs> SyncAddictionalDataCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveVisualSettingsCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LazuriteMobile.Android.ServiceClient.IServer.BeginIsScenarioValueChanged(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> lastKnownValue, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginIsScenarioValueChanged(scenarioId, lastKnownValue, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool LazuriteMobile.Android.ServiceClient.IServer.EndIsScenarioValueChanged(System.IAsyncResult result)
        {
            return base.Channel.EndIsScenarioValueChanged(result);
        }

        private System.IAsyncResult OnBeginIsScenarioValueChanged(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[0]));
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> lastKnownValue = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[1]));
            return ((LazuriteMobile.Android.ServiceClient.IServer)(this)).BeginIsScenarioValueChanged(scenarioId, lastKnownValue, callback, asyncState);
        }

        private object[] OnEndIsScenarioValueChanged(System.IAsyncResult result)
        {
            bool retVal = ((LazuriteMobile.Android.ServiceClient.IServer)(this)).EndIsScenarioValueChanged(result);
            return new object[] {
                    retVal};
        }

        private void OnIsScenarioValueChangedCompleted(object state)
        {
            if ((IsScenarioValueChangedCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                IsScenarioValueChangedCompleted(this, new IsScenarioValueChangedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void IsScenarioValueChangedAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> lastKnownValue)
        {
            IsScenarioValueChangedAsync(scenarioId, lastKnownValue, null);
        }

        public void IsScenarioValueChangedAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> lastKnownValue, object userState)
        {
            if ((onBeginIsScenarioValueChangedDelegate == null))
            {
                onBeginIsScenarioValueChangedDelegate = new BeginOperationDelegate(OnBeginIsScenarioValueChanged);
            }
            if ((onEndIsScenarioValueChangedDelegate == null))
            {
                onEndIsScenarioValueChangedDelegate = new EndOperationDelegate(OnEndIsScenarioValueChanged);
            }
            if ((onIsScenarioValueChangedCompletedDelegate == null))
            {
                onIsScenarioValueChangedCompletedDelegate = new System.Threading.SendOrPostCallback(OnIsScenarioValueChangedCompleted);
            }
            base.InvokeAsync(onBeginIsScenarioValueChangedDelegate, new object[] {
                        scenarioId,
                        lastKnownValue}, onEndIsScenarioValueChangedDelegate, onIsScenarioValueChangedCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LazuriteMobile.Android.ServiceClient.IServer.BeginGetScenariosInfo(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetScenariosInfo(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfo> LazuriteMobile.Android.ServiceClient.IServer.EndGetScenariosInfo(System.IAsyncResult result)
        {
            return base.Channel.EndGetScenariosInfo(result);
        }

        private System.IAsyncResult OnBeginGetScenariosInfo(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((LazuriteMobile.Android.ServiceClient.IServer)(this)).BeginGetScenariosInfo(callback, asyncState);
        }

        private object[] OnEndGetScenariosInfo(System.IAsyncResult result)
        {
            Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfo> retVal = ((LazuriteMobile.Android.ServiceClient.IServer)(this)).EndGetScenariosInfo(result);
            return new object[] {
                    retVal};
        }

        private void OnGetScenariosInfoCompleted(object state)
        {
            if ((GetScenariosInfoCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                GetScenariosInfoCompleted(this, new GetScenariosInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetScenariosInfoAsync()
        {
            GetScenariosInfoAsync(null);
        }

        public void GetScenariosInfoAsync(object userState)
        {
            if ((onBeginGetScenariosInfoDelegate == null))
            {
                onBeginGetScenariosInfoDelegate = new BeginOperationDelegate(OnBeginGetScenariosInfo);
            }
            if ((onEndGetScenariosInfoDelegate == null))
            {
                onEndGetScenariosInfoDelegate = new EndOperationDelegate(OnEndGetScenariosInfo);
            }
            if ((onGetScenariosInfoCompletedDelegate == null))
            {
                onGetScenariosInfoCompletedDelegate = new System.Threading.SendOrPostCallback(OnGetScenariosInfoCompleted);
            }
            base.InvokeAsync(onBeginGetScenariosInfoDelegate, null, onEndGetScenariosInfoDelegate, onGetScenariosInfoCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LazuriteMobile.Android.ServiceClient.IServer.BeginGetScenarioInfo(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetScenarioInfo(scenarioId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.ScenarioInfo> LazuriteMobile.Android.ServiceClient.IServer.EndGetScenarioInfo(System.IAsyncResult result)
        {
            return base.Channel.EndGetScenarioInfo(result);
        }

        private System.IAsyncResult OnBeginGetScenarioInfo(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[0]));
            return ((LazuriteMobile.Android.ServiceClient.IServer)(this)).BeginGetScenarioInfo(scenarioId, callback, asyncState);
        }

        private object[] OnEndGetScenarioInfo(System.IAsyncResult result)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.ScenarioInfo> retVal = ((LazuriteMobile.Android.ServiceClient.IServer)(this)).EndGetScenarioInfo(result);
            return new object[] {
                    retVal};
        }

        private void OnGetScenarioInfoCompleted(object state)
        {
            if ((GetScenarioInfoCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                GetScenarioInfoCompleted(this, new GetScenarioInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetScenarioInfoAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId)
        {
            GetScenarioInfoAsync(scenarioId, null);
        }

        public void GetScenarioInfoAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, object userState)
        {
            if ((onBeginGetScenarioInfoDelegate == null))
            {
                onBeginGetScenarioInfoDelegate = new BeginOperationDelegate(OnBeginGetScenarioInfo);
            }
            if ((onEndGetScenarioInfoDelegate == null))
            {
                onEndGetScenarioInfoDelegate = new EndOperationDelegate(OnEndGetScenarioInfo);
            }
            if ((onGetScenarioInfoCompletedDelegate == null))
            {
                onGetScenarioInfoCompletedDelegate = new System.Threading.SendOrPostCallback(OnGetScenarioInfoCompleted);
            }
            base.InvokeAsync(onBeginGetScenarioInfoDelegate, new object[] {
                        scenarioId}, onEndGetScenarioInfoDelegate, onGetScenarioInfoCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LazuriteMobile.Android.ServiceClient.IServer.BeginCalculateScenarioValue(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginCalculateScenarioValue(scenarioId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Lazurite.MainDomain.MessageSecurity.Encrypted<string> LazuriteMobile.Android.ServiceClient.IServer.EndCalculateScenarioValue(System.IAsyncResult result)
        {
            return base.Channel.EndCalculateScenarioValue(result);
        }

        private System.IAsyncResult OnBeginCalculateScenarioValue(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[0]));
            return ((LazuriteMobile.Android.ServiceClient.IServer)(this)).BeginCalculateScenarioValue(scenarioId, callback, asyncState);
        }

        private object[] OnEndCalculateScenarioValue(System.IAsyncResult result)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> retVal = ((LazuriteMobile.Android.ServiceClient.IServer)(this)).EndCalculateScenarioValue(result);
            return new object[] {
                    retVal};
        }

        private void OnCalculateScenarioValueCompleted(object state)
        {
            if ((CalculateScenarioValueCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                CalculateScenarioValueCompleted(this, new CalculateScenarioValueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void CalculateScenarioValueAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId)
        {
            CalculateScenarioValueAsync(scenarioId, null);
        }

        public void CalculateScenarioValueAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, object userState)
        {
            if ((onBeginCalculateScenarioValueDelegate == null))
            {
                onBeginCalculateScenarioValueDelegate = new BeginOperationDelegate(OnBeginCalculateScenarioValue);
            }
            if ((onEndCalculateScenarioValueDelegate == null))
            {
                onEndCalculateScenarioValueDelegate = new EndOperationDelegate(OnEndCalculateScenarioValue);
            }
            if ((onCalculateScenarioValueCompletedDelegate == null))
            {
                onCalculateScenarioValueCompletedDelegate = new System.Threading.SendOrPostCallback(OnCalculateScenarioValueCompleted);
            }
            base.InvokeAsync(onBeginCalculateScenarioValueDelegate, new object[] {
                        scenarioId}, onEndCalculateScenarioValueDelegate, onCalculateScenarioValueCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LazuriteMobile.Android.ServiceClient.IServer.BeginGetScenarioValue(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetScenarioValue(scenarioId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Lazurite.MainDomain.MessageSecurity.Encrypted<string> LazuriteMobile.Android.ServiceClient.IServer.EndGetScenarioValue(System.IAsyncResult result)
        {
            return base.Channel.EndGetScenarioValue(result);
        }

        private System.IAsyncResult OnBeginGetScenarioValue(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[0]));
            return ((LazuriteMobile.Android.ServiceClient.IServer)(this)).BeginGetScenarioValue(scenarioId, callback, asyncState);
        }

        private object[] OnEndGetScenarioValue(System.IAsyncResult result)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> retVal = ((LazuriteMobile.Android.ServiceClient.IServer)(this)).EndGetScenarioValue(result);
            return new object[] {
                    retVal};
        }

        private void OnGetScenarioValueCompleted(object state)
        {
            if ((GetScenarioValueCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                GetScenarioValueCompleted(this, new GetScenarioValueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetScenarioValueAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId)
        {
            GetScenarioValueAsync(scenarioId, null);
        }

        public void GetScenarioValueAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, object userState)
        {
            if ((onBeginGetScenarioValueDelegate == null))
            {
                onBeginGetScenarioValueDelegate = new BeginOperationDelegate(OnBeginGetScenarioValue);
            }
            if ((onEndGetScenarioValueDelegate == null))
            {
                onEndGetScenarioValueDelegate = new EndOperationDelegate(OnEndGetScenarioValue);
            }
            if ((onGetScenarioValueCompletedDelegate == null))
            {
                onGetScenarioValueCompletedDelegate = new System.Threading.SendOrPostCallback(OnGetScenarioValueCompleted);
            }
            base.InvokeAsync(onBeginGetScenarioValueDelegate, new object[] {
                        scenarioId}, onEndGetScenarioValueDelegate, onGetScenarioValueCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LazuriteMobile.Android.ServiceClient.IServer.BeginExecuteScenario(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginExecuteScenario(scenarioId, value, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LazuriteMobile.Android.ServiceClient.IServer.EndExecuteScenario(System.IAsyncResult result)
        {
            base.Channel.EndExecuteScenario(result);
        }

        private System.IAsyncResult OnBeginExecuteScenario(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[0]));
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> value = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[1]));
            return ((LazuriteMobile.Android.ServiceClient.IServer)(this)).BeginExecuteScenario(scenarioId, value, callback, asyncState);
        }

        private object[] OnEndExecuteScenario(System.IAsyncResult result)
        {
            ((LazuriteMobile.Android.ServiceClient.IServer)(this)).EndExecuteScenario(result);
            return null;
        }

        private void OnExecuteScenarioCompleted(object state)
        {
            if ((ExecuteScenarioCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                ExecuteScenarioCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void ExecuteScenarioAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value)
        {
            ExecuteScenarioAsync(scenarioId, value, null);
        }

        public void ExecuteScenarioAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, object userState)
        {
            if ((onBeginExecuteScenarioDelegate == null))
            {
                onBeginExecuteScenarioDelegate = new BeginOperationDelegate(OnBeginExecuteScenario);
            }
            if ((onEndExecuteScenarioDelegate == null))
            {
                onEndExecuteScenarioDelegate = new EndOperationDelegate(OnEndExecuteScenario);
            }
            if ((onExecuteScenarioCompletedDelegate == null))
            {
                onExecuteScenarioCompletedDelegate = new System.Threading.SendOrPostCallback(OnExecuteScenarioCompleted);
            }
            base.InvokeAsync(onBeginExecuteScenarioDelegate, new object[] {
                        scenarioId,
                        value}, onEndExecuteScenarioDelegate, onExecuteScenarioCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LazuriteMobile.Android.ServiceClient.IServer.BeginAsyncExecuteScenario(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginAsyncExecuteScenario(scenarioId, value, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LazuriteMobile.Android.ServiceClient.IServer.EndAsyncExecuteScenario(System.IAsyncResult result)
        {
            base.Channel.EndAsyncExecuteScenario(result);
        }

        private System.IAsyncResult OnBeginAsyncExecuteScenario(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[0]));
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> value = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[1]));
            return ((LazuriteMobile.Android.ServiceClient.IServer)(this)).BeginAsyncExecuteScenario(scenarioId, value, callback, asyncState);
        }

        private object[] OnEndAsyncExecuteScenario(System.IAsyncResult result)
        {
            ((LazuriteMobile.Android.ServiceClient.IServer)(this)).EndAsyncExecuteScenario(result);
            return null;
        }

        private void OnAsyncExecuteScenarioCompleted(object state)
        {
            if ((AsyncExecuteScenarioCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                AsyncExecuteScenarioCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void AsyncExecuteScenarioAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value)
        {
            AsyncExecuteScenarioAsync(scenarioId, value, null);
        }

        public void AsyncExecuteScenarioAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, object userState)
        {
            if ((onBeginAsyncExecuteScenarioDelegate == null))
            {
                onBeginAsyncExecuteScenarioDelegate = new BeginOperationDelegate(OnBeginAsyncExecuteScenario);
            }
            if ((onEndAsyncExecuteScenarioDelegate == null))
            {
                onEndAsyncExecuteScenarioDelegate = new EndOperationDelegate(OnEndAsyncExecuteScenario);
            }
            if ((onAsyncExecuteScenarioCompletedDelegate == null))
            {
                onAsyncExecuteScenarioCompletedDelegate = new System.Threading.SendOrPostCallback(OnAsyncExecuteScenarioCompleted);
            }
            base.InvokeAsync(onBeginAsyncExecuteScenarioDelegate, new object[] {
                        scenarioId,
                        value}, onEndAsyncExecuteScenarioDelegate, onAsyncExecuteScenarioCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LazuriteMobile.Android.ServiceClient.IServer.BeginAsyncExecuteScenarioParallel(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginAsyncExecuteScenarioParallel(scenarioId, value, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LazuriteMobile.Android.ServiceClient.IServer.EndAsyncExecuteScenarioParallel(System.IAsyncResult result)
        {
            base.Channel.EndAsyncExecuteScenarioParallel(result);
        }

        private System.IAsyncResult OnBeginAsyncExecuteScenarioParallel(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[0]));
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> value = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[1]));
            return ((LazuriteMobile.Android.ServiceClient.IServer)(this)).BeginAsyncExecuteScenarioParallel(scenarioId, value, callback, asyncState);
        }

        private object[] OnEndAsyncExecuteScenarioParallel(System.IAsyncResult result)
        {
            ((LazuriteMobile.Android.ServiceClient.IServer)(this)).EndAsyncExecuteScenarioParallel(result);
            return null;
        }

        private void OnAsyncExecuteScenarioParallelCompleted(object state)
        {
            if ((AsyncExecuteScenarioParallelCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                AsyncExecuteScenarioParallelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void AsyncExecuteScenarioParallelAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value)
        {
            AsyncExecuteScenarioParallelAsync(scenarioId, value, null);
        }

        public void AsyncExecuteScenarioParallelAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, object userState)
        {
            if ((onBeginAsyncExecuteScenarioParallelDelegate == null))
            {
                onBeginAsyncExecuteScenarioParallelDelegate = new BeginOperationDelegate(OnBeginAsyncExecuteScenarioParallel);
            }
            if ((onEndAsyncExecuteScenarioParallelDelegate == null))
            {
                onEndAsyncExecuteScenarioParallelDelegate = new EndOperationDelegate(OnEndAsyncExecuteScenarioParallel);
            }
            if ((onAsyncExecuteScenarioParallelCompletedDelegate == null))
            {
                onAsyncExecuteScenarioParallelCompletedDelegate = new System.Threading.SendOrPostCallback(OnAsyncExecuteScenarioParallelCompleted);
            }
            base.InvokeAsync(onBeginAsyncExecuteScenarioParallelDelegate, new object[] {
                        scenarioId,
                        value}, onEndAsyncExecuteScenarioParallelDelegate, onAsyncExecuteScenarioParallelCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LazuriteMobile.Android.ServiceClient.IServer.BeginGetChangedScenarios(System.DateTime since, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetChangedScenarios(since, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfoLW> LazuriteMobile.Android.ServiceClient.IServer.EndGetChangedScenarios(System.IAsyncResult result)
        {
            return base.Channel.EndGetChangedScenarios(result);
        }

        private System.IAsyncResult OnBeginGetChangedScenarios(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            System.DateTime since = ((System.DateTime)(inValues[0]));
            return ((LazuriteMobile.Android.ServiceClient.IServer)(this)).BeginGetChangedScenarios(since, callback, asyncState);
        }

        private object[] OnEndGetChangedScenarios(System.IAsyncResult result)
        {
            Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfoLW> retVal = ((LazuriteMobile.Android.ServiceClient.IServer)(this)).EndGetChangedScenarios(result);
            return new object[] {
                    retVal};
        }

        private void OnGetChangedScenariosCompleted(object state)
        {
            if ((GetChangedScenariosCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                GetChangedScenariosCompleted(this, new GetChangedScenariosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetChangedScenariosAsync(System.DateTime since)
        {
            GetChangedScenariosAsync(since, null);
        }

        public void GetChangedScenariosAsync(System.DateTime since, object userState)
        {
            if ((onBeginGetChangedScenariosDelegate == null))
            {
                onBeginGetChangedScenariosDelegate = new BeginOperationDelegate(OnBeginGetChangedScenarios);
            }
            if ((onEndGetChangedScenariosDelegate == null))
            {
                onEndGetChangedScenariosDelegate = new EndOperationDelegate(OnEndGetChangedScenarios);
            }
            if ((onGetChangedScenariosCompletedDelegate == null))
            {
                onGetChangedScenariosCompletedDelegate = new System.Threading.SendOrPostCallback(OnGetChangedScenariosCompleted);
            }
            base.InvokeAsync(onBeginGetChangedScenariosDelegate, new object[] {
                        since}, onEndGetChangedScenariosDelegate, onGetChangedScenariosCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LazuriteMobile.Android.ServiceClient.IServer.BeginSaveVisualSettings(Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.UserVisualSettings> visualSettings, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSaveVisualSettings(visualSettings, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LazuriteMobile.Android.ServiceClient.IServer.EndSaveVisualSettings(System.IAsyncResult result)
        {
            base.Channel.EndSaveVisualSettings(result);
        }

        private System.IAsyncResult OnBeginSaveVisualSettings(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.UserVisualSettings> visualSettings = ((Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.UserVisualSettings>)(inValues[0]));
            return ((LazuriteMobile.Android.ServiceClient.IServer)(this)).BeginSaveVisualSettings(visualSettings, callback, asyncState);
        }

        private object[] OnEndSaveVisualSettings(System.IAsyncResult result)
        {
            ((LazuriteMobile.Android.ServiceClient.IServer)(this)).EndSaveVisualSettings(result);
            return null;
        }

        private void OnSaveVisualSettingsCompleted(object state)
        {
            if ((SaveVisualSettingsCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                SaveVisualSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void SaveVisualSettingsAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.UserVisualSettings> visualSettings)
        {
            SaveVisualSettingsAsync(visualSettings, null);
        }

        public void SaveVisualSettingsAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.UserVisualSettings> visualSettings, object userState)
        {
            if ((onBeginSaveVisualSettingsDelegate == null))
            {
                onBeginSaveVisualSettingsDelegate = new BeginOperationDelegate(OnBeginSaveVisualSettings);
            }
            if ((onEndSaveVisualSettingsDelegate == null))
            {
                onEndSaveVisualSettingsDelegate = new EndOperationDelegate(OnEndSaveVisualSettings);
            }
            if ((onSaveVisualSettingsCompletedDelegate == null))
            {
                onSaveVisualSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(OnSaveVisualSettingsCompleted);
            }
            base.InvokeAsync(onBeginSaveVisualSettingsDelegate, new object[] {
                        visualSettings}, onEndSaveVisualSettingsDelegate, onSaveVisualSettingsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LazuriteMobile.Android.ServiceClient.IServer.BeginSyncAddictionalData(Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.AddictionalData> data, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSyncAddictionalData(data, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.AddictionalData> LazuriteMobile.Android.ServiceClient.IServer.EndSyncAddictionalData(System.IAsyncResult result)
        {
            return base.Channel.EndSyncAddictionalData(result);
        }

        private System.IAsyncResult OnBeginSyncAddictionalData(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.AddictionalData> data = ((Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.AddictionalData>)(inValues[0]));
            return ((LazuriteMobile.Android.ServiceClient.IServer)(this)).BeginSyncAddictionalData(data, callback, asyncState);
        }

        private object[] OnEndSyncAddictionalData(System.IAsyncResult result)
        {
            ((LazuriteMobile.Android.ServiceClient.IServer)(this)).EndSyncAddictionalData(result);
            return null;
        }

        private void OnSyncAddictionalDataCompleted(object state)
        {
            if ((SyncAddictionalDataCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                SyncAddictionalDataCompleted(this, new SyncAddictionalDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void SyncAddictionalDataAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.AddictionalData> data)
        {
            SyncAddictionalDataAsync(data, null);
        }

        public void SyncAddictionalDataAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.AddictionalData> data, object userState)
        {
            if ((onBeginSyncAddictionalDataDelegate == null))
            {
                onBeginSyncAddictionalDataDelegate = new BeginOperationDelegate(OnBeginSyncAddictionalData);
            }
            if ((onEndSyncAddictionalDataDelegate == null))
            {
                onEndSyncAddictionalDataDelegate = new EndOperationDelegate(OnEndSyncAddictionalData);
            }
            if ((onSyncAddictionalDataCompletedDelegate == null))
            {
                onSyncAddictionalDataCompletedDelegate = new System.Threading.SendOrPostCallback(OnSyncAddictionalDataCompleted);
            }
            base.InvokeAsync(onBeginSyncAddictionalDataDelegate, new object[] {
                        data}, onEndSyncAddictionalDataDelegate, onSyncAddictionalDataCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }

        private object[] OnEndOpen(System.IAsyncResult result)
        {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }

        private void OnOpenCompleted(object state)
        {
            if ((OpenCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void OpenAsync()
        {
            OpenAsync(null);
        }

        public void OpenAsync(object userState)
        {
            if ((onBeginOpenDelegate == null))
            {
                onBeginOpenDelegate = new BeginOperationDelegate(OnBeginOpen);
            }
            if ((onEndOpenDelegate == null))
            {
                onEndOpenDelegate = new EndOperationDelegate(OnEndOpen);
            }
            if ((onOpenCompletedDelegate == null))
            {
                onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(OnOpenCompleted);
            }
            base.InvokeAsync(onBeginOpenDelegate, null, onEndOpenDelegate, onOpenCompletedDelegate, userState);
        }

        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }

        private object[] OnEndClose(System.IAsyncResult result)
        {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }

        private void OnCloseCompleted(object state)
        {
            if ((CloseCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void CloseAsync()
        {
            CloseAsync(null);
        }

        public void CloseAsync(object userState)
        {
            if ((onBeginCloseDelegate == null))
            {
                onBeginCloseDelegate = new BeginOperationDelegate(OnBeginClose);
            }
            if ((onEndCloseDelegate == null))
            {
                onEndCloseDelegate = new EndOperationDelegate(OnEndClose);
            }
            if ((onCloseCompletedDelegate == null))
            {
                onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(OnCloseCompleted);
            }
            base.InvokeAsync(onBeginCloseDelegate, null, onEndCloseDelegate, onCloseCompletedDelegate, userState);
        }

        protected override LazuriteMobile.Android.ServiceClient.IServer CreateChannel()
        {
            return new ServerClientChannel(this);
        }

        private class ServerClientChannel : ChannelBase<LazuriteMobile.Android.ServiceClient.IServer>, LazuriteMobile.Android.ServiceClient.IServer
        {

            public ServerClientChannel(System.ServiceModel.ClientBase<LazuriteMobile.Android.ServiceClient.IServer> client) :
                    base(client)
            {
            }

            public System.IAsyncResult BeginIsScenarioValueChanged(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> lastKnownValue, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[2];
                _args[0] = scenarioId;
                _args[1] = lastKnownValue;
                System.IAsyncResult _result = base.BeginInvoke("IsScenarioValueChanged", _args, callback, asyncState);
                return _result;
            }

            public bool EndIsScenarioValueChanged(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("IsScenarioValueChanged", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetScenariosInfo(System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetScenariosInfo", _args, callback, asyncState);
                return _result;
            }

            public Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfo> EndGetScenariosInfo(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfo> _result = ((Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfo>)(base.EndInvoke("GetScenariosInfo", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetScenarioInfo(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = scenarioId;
                System.IAsyncResult _result = base.BeginInvoke("GetScenarioInfo", _args, callback, asyncState);
                return _result;
            }

            public Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.ScenarioInfo> EndGetScenarioInfo(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.ScenarioInfo> _result = ((Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.ScenarioInfo>)(base.EndInvoke("GetScenarioInfo", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginCalculateScenarioValue(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = scenarioId;
                System.IAsyncResult _result = base.BeginInvoke("CalculateScenarioValue", _args, callback, asyncState);
                return _result;
            }

            public Lazurite.MainDomain.MessageSecurity.Encrypted<string> EndCalculateScenarioValue(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Lazurite.MainDomain.MessageSecurity.Encrypted<string> _result = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(base.EndInvoke("CalculateScenarioValue", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetScenarioValue(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = scenarioId;
                System.IAsyncResult _result = base.BeginInvoke("GetScenarioValue", _args, callback, asyncState);
                return _result;
            }

            public Lazurite.MainDomain.MessageSecurity.Encrypted<string> EndGetScenarioValue(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Lazurite.MainDomain.MessageSecurity.Encrypted<string> _result = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(base.EndInvoke("GetScenarioValue", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginExecuteScenario(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[2];
                _args[0] = scenarioId;
                _args[1] = value;
                System.IAsyncResult _result = base.BeginInvoke("ExecuteScenario", _args, callback, asyncState);
                return _result;
            }

            public void EndExecuteScenario(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("ExecuteScenario", _args, result);
            }

            public System.IAsyncResult BeginAsyncExecuteScenario(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[2];
                _args[0] = scenarioId;
                _args[1] = value;
                System.IAsyncResult _result = base.BeginInvoke("AsyncExecuteScenario", _args, callback, asyncState);
                return _result;
            }

            public void EndAsyncExecuteScenario(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("AsyncExecuteScenario", _args, result);
            }

            public System.IAsyncResult BeginAsyncExecuteScenarioParallel(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[2];
                _args[0] = scenarioId;
                _args[1] = value;
                System.IAsyncResult _result = base.BeginInvoke("AsyncExecuteScenarioParallel", _args, callback, asyncState);
                return _result;
            }

            public void EndAsyncExecuteScenarioParallel(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("AsyncExecuteScenarioParallel", _args, result);
            }

            public System.IAsyncResult BeginGetChangedScenarios(System.DateTime since, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = since;
                System.IAsyncResult _result = base.BeginInvoke("GetChangedScenarios", _args, callback, asyncState);
                return _result;
            }

            public Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfoLW> EndGetChangedScenarios(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfoLW> _result = ((Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfoLW>)(base.EndInvoke("GetChangedScenarios", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginSaveVisualSettings(Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.UserVisualSettings> visualSettings, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = visualSettings;
                System.IAsyncResult _result = base.BeginInvoke("SaveVisualSettings", _args, callback, asyncState);
                return _result;
            }

            public void EndSaveVisualSettings(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("SaveVisualSettings", _args, result);
            }
            
            public System.IAsyncResult BeginSyncAddictionalData(Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.AddictionalData> data, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = data;
                System.IAsyncResult _result = base.BeginInvoke("SyncAddictionalData", _args, callback, asyncState);
                return _result;
            }

            public Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.AddictionalData> EndSyncAddictionalData(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.AddictionalData> _result = ((Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.AddictionalData>)(base.EndInvoke("SyncAddictionalData", _args, result)));
                return _result;
            }
        }
    }
}