<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddNewRowText" xml:space="preserve">
    <value>Добавить строку</value>
    <comment>Add new row water mark text.</comment>
  </data>
  <data name="AdvancedFiltersButtonText" xml:space="preserve">
    <value>Фильтры...</value>
    <comment>Text for Advanced Filters button</comment>
  </data>
  <data name="After" xml:space="preserve">
    <value>Больше</value>
    <comment>Text for After</comment>
  </data>
  <data name="AfterOrEqual" xml:space="preserve">
    <value>Больше или равно</value>
    <comment>Text for AfterOrEqual</comment>
  </data>
  <data name="AND" xml:space="preserve">
    <value>И</value>
    <comment>Text for AND Operator</comment>
  </data>
  <data name="Before" xml:space="preserve">
    <value>Меньше</value>
    <comment>Text for Before</comment>
  </data>
  <data name="BeforeOrEqual" xml:space="preserve">
    <value>Меньше иил равно</value>
    <comment>Text for BeforeOrEqual</comment>
  </data>
  <data name="BeginsWith" xml:space="preserve">
    <value>Начинается с...</value>
    <comment>Text for BeginsWith</comment>
  </data>
  <data name="Blanks" xml:space="preserve">
    <value>(пусто)</value>
    <comment>Text for Blank filters</comment>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Отмена</value>
    <comment>Text for Cancel</comment>
  </data>
  <data name="ClearFilter" xml:space="preserve">
    <value>Очистить фильтр</value>
    <comment>Text for Clear filters</comment>
  </data>
  <data name="ColumnChooserTitle" xml:space="preserve">
    <value>Выбор колонок</value>
    <comment>Column Chooser Window Title</comment>
  </data>
  <data name="ColumnChooserWaterMark" xml:space="preserve">
    <value>(Нет доступных полей)</value>
    <comment>Empty Column Chooser Water Mark Text</comment>
  </data>
  <data name="Contains" xml:space="preserve">
    <value>Содержит</value>
    <comment>Text for Contains</comment>
  </data>
  <data name="DateFilters" xml:space="preserve">
    <value>Фильтр по дате</value>
    <comment>Text for DateFilters</comment>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Закончить</value>
    <comment>Text for Done button</comment>
  </data>
  <data name="Empty" xml:space="preserve">
    <value>Пусто</value>
    <comment>Text for Empty</comment>
  </data>
  <data name="EndsWith" xml:space="preserve">
    <value>Оканчивается на...</value>
    <comment>Text for EndsWith</comment>
  </data>
  <data name="EnterValidFilterValue" xml:space="preserve">
    <value>Введите правильное значение фильтра</value>
    <comment>Text for EnterValidFilterValue</comment>
  </data>
  <data name="Equalss" xml:space="preserve">
    <value>Равно</value>
    <comment>Text for Equals</comment>
  </data>
  <data name="GreaterThan" xml:space="preserve">
    <value>Больше чем</value>
    <comment>Text for GreaterThan</comment>
  </data>
  <data name="GreaterThanorEqual" xml:space="preserve">
    <value>Больше или равно</value>
    <comment>Text for GreaterThanorEqual</comment>
  </data>
  <data name="GroupDropAreaText" xml:space="preserve">
    <value>Перетащите колонку для группировки</value>
    <comment>Text for GroupDropArea</comment>
  </data>
  <data name="LessThan" xml:space="preserve">
    <value>Меньше чем</value>
    <comment>Text for Less Than</comment>
  </data>
  <data name="LessThanorEqual" xml:space="preserve">
    <value>Меньше или равно</value>
    <comment>Text for LessThanorEqual</comment>
  </data>
  <data name="NoItems" xml:space="preserve">
    <value>Нет значений</value>
    <comment>No Items to Display</comment>
  </data>
  <data name="NoMatches" xml:space="preserve">
    <value>Нет совпадений</value>
    <comment>No Items match </comment>
  </data>
  <data name="NotContains" xml:space="preserve">
    <value>НеСодержит</value>
    <comment>Text for NotContains</comment>
  </data>
  <data name="NotEmpty" xml:space="preserve">
    <value>НеПусто</value>
    <comment>Text for NotEmpty</comment>
  </data>
  <data name="NotEquals" xml:space="preserve">
    <value>НеРавно</value>
    <comment>Text For NotEquals</comment>
  </data>
  <data name="NotNull" xml:space="preserve">
    <value>НеПусто</value>
    <comment>Text for NotNull</comment>
  </data>
  <data name="Null" xml:space="preserve">
    <value>Пусто</value>
    <comment>Text for Null</comment>
  </data>
  <data name="NumberFilters" xml:space="preserve">
    <value>Фильтр по числу</value>
    <comment>Text for NumberFilters</comment>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
    <comment>Text for OK</comment>
  </data>
  <data name="OR" xml:space="preserve">
    <value>Или</value>
    <comment>Text for OR Operator</comment>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Печать</value>
    <comment>Text for Print</comment>
  </data>
  <data name="PrintPreview" xml:space="preserve">
    <value>Предпросмотр печати</value>
    <comment>Text for PrintPreview</comment>
  </data>
  <data name="QuickPrint" xml:space="preserve">
    <value>Быстрая печать</value>
    <comment>Text for Quick Print</comment>
  </data>
  <data name="RowErrorMessage" xml:space="preserve">
    <value>Ошибка в строке</value>
    <comment>Error Indication by INotifyDataErrorInfo</comment>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Поиск</value>
    <comment>Search water mark</comment>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>(Выбрать все)</value>
    <comment>Text for Select All</comment>
  </data>
  <data name="ShowRowsWhere" xml:space="preserve">
    <value>Условия:</value>
    <comment>Text for show rows Textblock in AdvancedFilter</comment>
  </data>
  <data name="SortDateAscending" xml:space="preserve">
    <value>Сортировать от ранних к поздним</value>
    <comment>Text for Sort Ascending</comment>
  </data>
  <data name="SortDateDescending" xml:space="preserve">
    <value>Сортировать от поздних к ранним</value>
    <comment>Text for Sort Descending</comment>
  </data>
  <data name="SortNumberAscending" xml:space="preserve">
    <value>Сортировать по возрастанию</value>
    <comment>Text for Sort Ascending</comment>
  </data>
  <data name="SortNumberDescending" xml:space="preserve">
    <value>Сортировать по убыванию</value>
    <comment>Text for Sort Descending</comment>
  </data>
  <data name="SortStringAscending" xml:space="preserve">
    <value>Сортировать А-Я</value>
    <comment>Text for Sort Ascending</comment>
  </data>
  <data name="SortStringDescending" xml:space="preserve">
    <value>Сортировать Я-А</value>
    <comment>Text for Sort Descending</comment>
  </data>
  <data name="TextFilters" xml:space="preserve">
    <value>Текстовые фильтры</value>
    <comment>Text for TextFilters</comment>
  </data>
</root>