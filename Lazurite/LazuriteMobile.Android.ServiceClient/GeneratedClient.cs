//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by SlSvcUtil, version 5.0.61118.0
// 
namespace LazuriteMobile.Android.ServiceClient
{
    using System.Runtime.Serialization;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "LazuriteMobile.Android.ServiceClient.IServer")]
    public interface IServer
    {

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IServer/IsScenarioValueChanged", ReplyAction = "http://tempuri.org/IServer/IsScenarioValueChangedResponse")]
        System.IAsyncResult BeginIsScenarioValueChanged(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> lastKnownValue, System.AsyncCallback callback, object asyncState);

        bool EndIsScenarioValueChanged(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IServer/GetScenariosInfo", ReplyAction = "http://tempuri.org/IServer/GetScenariosInfoResponse")]
        System.IAsyncResult BeginGetScenariosInfo(System.AsyncCallback callback, object asyncState);

        Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfo> EndGetScenariosInfo(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IServer/GetScenarioInfo", ReplyAction = "http://tempuri.org/IServer/GetScenarioInfoResponse")]
        System.IAsyncResult BeginGetScenarioInfo(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, System.AsyncCallback callback, object asyncState);

        Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.ScenarioInfo> EndGetScenarioInfo(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IServer/CalculateScenarioValue", ReplyAction = "http://tempuri.org/IServer/CalculateScenarioValueResponse")]
        System.IAsyncResult BeginCalculateScenarioValue(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, System.AsyncCallback callback, object asyncState);

        Lazurite.MainDomain.MessageSecurity.Encrypted<string> EndCalculateScenarioValue(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IServer/GetScenarioValue", ReplyAction = "http://tempuri.org/IServer/GetScenarioValueResponse")]
        System.IAsyncResult BeginGetScenarioValue(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, System.AsyncCallback callback, object asyncState);

        Lazurite.MainDomain.MessageSecurity.Encrypted<string> EndGetScenarioValue(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IServer/ExecuteScenario", ReplyAction = "http://tempuri.org/IServer/ExecuteScenarioResponse")]
        System.IAsyncResult BeginExecuteScenario(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, System.AsyncCallback callback, object asyncState);

        void EndExecuteScenario(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IServer/AsyncExecuteScenario", ReplyAction = "http://tempuri.org/IServer/AsyncExecuteScenarioResponse")]
        System.IAsyncResult BeginAsyncExecuteScenario(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, System.AsyncCallback callback, object asyncState);

        void EndAsyncExecuteScenario(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IServer/AsyncExecuteScenarioParallel", ReplyAction = "http://tempuri.org/IServer/AsyncExecuteScenarioParallelResponse")]
        System.IAsyncResult BeginAsyncExecuteScenarioParallel(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, System.AsyncCallback callback, object asyncState);

        void EndAsyncExecuteScenarioParallel(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IServer/GetChangedScenarios", ReplyAction = "http://tempuri.org/IServer/GetChangedScenariosResponse")]
        System.IAsyncResult BeginGetChangedScenarios(System.DateTime since, System.AsyncCallback callback, object asyncState);

        Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfoLW> EndGetChangedScenarios(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IServer/SaveVisualSettings", ReplyAction = "http://tempuri.org/IServer/SaveVisualSettingsResponse")]
        System.IAsyncResult BeginSaveVisualSettings(Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.UserVisualSettings> visualSettings, System.AsyncCallback callback, object asyncState);

        void EndSaveVisualSettings(System.IAsyncResult result);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerChannel : LazuriteMobile.Android.ServiceClient.IServer, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsScenarioValueChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public IsScenarioValueChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public bool Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetScenariosInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetScenariosInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfo> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfo>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetScenarioInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetScenarioInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.ScenarioInfo> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.ScenarioInfo>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculateScenarioValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public CalculateScenarioValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public Lazurite.MainDomain.MessageSecurity.Encrypted<string> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetScenarioValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetScenarioValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public Lazurite.MainDomain.MessageSecurity.Encrypted<string> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetChangedScenariosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetChangedScenariosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfoLW> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfoLW>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServerClient : System.ServiceModel.ClientBase<LazuriteMobile.Android.ServiceClient.IServer>, LazuriteMobile.Android.ServiceClient.IServer
    {

        private BeginOperationDelegate onBeginIsScenarioValueChangedDelegate;

        private EndOperationDelegate onEndIsScenarioValueChangedDelegate;

        private System.Threading.SendOrPostCallback onIsScenarioValueChangedCompletedDelegate;

        private BeginOperationDelegate onBeginGetScenariosInfoDelegate;

        private EndOperationDelegate onEndGetScenariosInfoDelegate;

        private System.Threading.SendOrPostCallback onGetScenariosInfoCompletedDelegate;

        private BeginOperationDelegate onBeginGetScenarioInfoDelegate;

        private EndOperationDelegate onEndGetScenarioInfoDelegate;

        private System.Threading.SendOrPostCallback onGetScenarioInfoCompletedDelegate;

        private BeginOperationDelegate onBeginCalculateScenarioValueDelegate;

        private EndOperationDelegate onEndCalculateScenarioValueDelegate;

        private System.Threading.SendOrPostCallback onCalculateScenarioValueCompletedDelegate;

        private BeginOperationDelegate onBeginGetScenarioValueDelegate;

        private EndOperationDelegate onEndGetScenarioValueDelegate;

        private System.Threading.SendOrPostCallback onGetScenarioValueCompletedDelegate;

        private BeginOperationDelegate onBeginExecuteScenarioDelegate;

        private EndOperationDelegate onEndExecuteScenarioDelegate;

        private System.Threading.SendOrPostCallback onExecuteScenarioCompletedDelegate;

        private BeginOperationDelegate onBeginAsyncExecuteScenarioDelegate;

        private EndOperationDelegate onEndAsyncExecuteScenarioDelegate;

        private System.Threading.SendOrPostCallback onAsyncExecuteScenarioCompletedDelegate;

        private BeginOperationDelegate onBeginAsyncExecuteScenarioParallelDelegate;

        private EndOperationDelegate onEndAsyncExecuteScenarioParallelDelegate;

        private System.Threading.SendOrPostCallback onAsyncExecuteScenarioParallelCompletedDelegate;

        private BeginOperationDelegate onBeginGetChangedScenariosDelegate;

        private EndOperationDelegate onEndGetChangedScenariosDelegate;

        private System.Threading.SendOrPostCallback onGetChangedScenariosCompletedDelegate;

        private BeginOperationDelegate onBeginSaveVisualSettingsDelegate;

        private EndOperationDelegate onEndSaveVisualSettingsDelegate;

        private System.Threading.SendOrPostCallback onSaveVisualSettingsCompletedDelegate;

        private BeginOperationDelegate onBeginOpenDelegate;

        private EndOperationDelegate onEndOpenDelegate;

        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;

        private BeginOperationDelegate onBeginCloseDelegate;

        private EndOperationDelegate onEndCloseDelegate;

        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;

        public ServerClient()
        {
        }

        public ServerClient(string endpointConfigurationName) :
                base(endpointConfigurationName)
        {
        }

        public ServerClient(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public ServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public ServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public System.Net.CookieContainer CookieContainer
        {
            get
            {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null))
                {
                    return httpCookieContainerManager.CookieContainer;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null))
                {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else
                {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }

        public event System.EventHandler<IsScenarioValueChangedCompletedEventArgs> IsScenarioValueChangedCompleted;

        public event System.EventHandler<GetScenariosInfoCompletedEventArgs> GetScenariosInfoCompleted;

        public event System.EventHandler<GetScenarioInfoCompletedEventArgs> GetScenarioInfoCompleted;

        public event System.EventHandler<CalculateScenarioValueCompletedEventArgs> CalculateScenarioValueCompleted;

        public event System.EventHandler<GetScenarioValueCompletedEventArgs> GetScenarioValueCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ExecuteScenarioCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AsyncExecuteScenarioCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AsyncExecuteScenarioParallelCompleted;

        public event System.EventHandler<GetChangedScenariosCompletedEventArgs> GetChangedScenariosCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveVisualSettingsCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LazuriteMobile.Android.ServiceClient.IServer.BeginIsScenarioValueChanged(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> lastKnownValue, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginIsScenarioValueChanged(scenarioId, lastKnownValue, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool LazuriteMobile.Android.ServiceClient.IServer.EndIsScenarioValueChanged(System.IAsyncResult result)
        {
            return base.Channel.EndIsScenarioValueChanged(result);
        }

        private System.IAsyncResult OnBeginIsScenarioValueChanged(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[0]));
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> lastKnownValue = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[1]));
            return ((LazuriteMobile.Android.ServiceClient.IServer)(this)).BeginIsScenarioValueChanged(scenarioId, lastKnownValue, callback, asyncState);
        }

        private object[] OnEndIsScenarioValueChanged(System.IAsyncResult result)
        {
            bool retVal = ((LazuriteMobile.Android.ServiceClient.IServer)(this)).EndIsScenarioValueChanged(result);
            return new object[] {
                    retVal};
        }

        private void OnIsScenarioValueChangedCompleted(object state)
        {
            if ((this.IsScenarioValueChangedCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsScenarioValueChangedCompleted(this, new IsScenarioValueChangedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void IsScenarioValueChangedAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> lastKnownValue)
        {
            this.IsScenarioValueChangedAsync(scenarioId, lastKnownValue, null);
        }

        public void IsScenarioValueChangedAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> lastKnownValue, object userState)
        {
            if ((this.onBeginIsScenarioValueChangedDelegate == null))
            {
                this.onBeginIsScenarioValueChangedDelegate = new BeginOperationDelegate(this.OnBeginIsScenarioValueChanged);
            }
            if ((this.onEndIsScenarioValueChangedDelegate == null))
            {
                this.onEndIsScenarioValueChangedDelegate = new EndOperationDelegate(this.OnEndIsScenarioValueChanged);
            }
            if ((this.onIsScenarioValueChangedCompletedDelegate == null))
            {
                this.onIsScenarioValueChangedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsScenarioValueChangedCompleted);
            }
            base.InvokeAsync(this.onBeginIsScenarioValueChangedDelegate, new object[] {
                        scenarioId,
                        lastKnownValue}, this.onEndIsScenarioValueChangedDelegate, this.onIsScenarioValueChangedCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LazuriteMobile.Android.ServiceClient.IServer.BeginGetScenariosInfo(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetScenariosInfo(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfo> LazuriteMobile.Android.ServiceClient.IServer.EndGetScenariosInfo(System.IAsyncResult result)
        {
            return base.Channel.EndGetScenariosInfo(result);
        }

        private System.IAsyncResult OnBeginGetScenariosInfo(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((LazuriteMobile.Android.ServiceClient.IServer)(this)).BeginGetScenariosInfo(callback, asyncState);
        }

        private object[] OnEndGetScenariosInfo(System.IAsyncResult result)
        {
            Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfo> retVal = ((LazuriteMobile.Android.ServiceClient.IServer)(this)).EndGetScenariosInfo(result);
            return new object[] {
                    retVal};
        }

        private void OnGetScenariosInfoCompleted(object state)
        {
            if ((this.GetScenariosInfoCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetScenariosInfoCompleted(this, new GetScenariosInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetScenariosInfoAsync()
        {
            this.GetScenariosInfoAsync(null);
        }

        public void GetScenariosInfoAsync(object userState)
        {
            if ((this.onBeginGetScenariosInfoDelegate == null))
            {
                this.onBeginGetScenariosInfoDelegate = new BeginOperationDelegate(this.OnBeginGetScenariosInfo);
            }
            if ((this.onEndGetScenariosInfoDelegate == null))
            {
                this.onEndGetScenariosInfoDelegate = new EndOperationDelegate(this.OnEndGetScenariosInfo);
            }
            if ((this.onGetScenariosInfoCompletedDelegate == null))
            {
                this.onGetScenariosInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetScenariosInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetScenariosInfoDelegate, null, this.onEndGetScenariosInfoDelegate, this.onGetScenariosInfoCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LazuriteMobile.Android.ServiceClient.IServer.BeginGetScenarioInfo(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetScenarioInfo(scenarioId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.ScenarioInfo> LazuriteMobile.Android.ServiceClient.IServer.EndGetScenarioInfo(System.IAsyncResult result)
        {
            return base.Channel.EndGetScenarioInfo(result);
        }

        private System.IAsyncResult OnBeginGetScenarioInfo(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[0]));
            return ((LazuriteMobile.Android.ServiceClient.IServer)(this)).BeginGetScenarioInfo(scenarioId, callback, asyncState);
        }

        private object[] OnEndGetScenarioInfo(System.IAsyncResult result)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.ScenarioInfo> retVal = ((LazuriteMobile.Android.ServiceClient.IServer)(this)).EndGetScenarioInfo(result);
            return new object[] {
                    retVal};
        }

        private void OnGetScenarioInfoCompleted(object state)
        {
            if ((this.GetScenarioInfoCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetScenarioInfoCompleted(this, new GetScenarioInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetScenarioInfoAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId)
        {
            this.GetScenarioInfoAsync(scenarioId, null);
        }

        public void GetScenarioInfoAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, object userState)
        {
            if ((this.onBeginGetScenarioInfoDelegate == null))
            {
                this.onBeginGetScenarioInfoDelegate = new BeginOperationDelegate(this.OnBeginGetScenarioInfo);
            }
            if ((this.onEndGetScenarioInfoDelegate == null))
            {
                this.onEndGetScenarioInfoDelegate = new EndOperationDelegate(this.OnEndGetScenarioInfo);
            }
            if ((this.onGetScenarioInfoCompletedDelegate == null))
            {
                this.onGetScenarioInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetScenarioInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetScenarioInfoDelegate, new object[] {
                        scenarioId}, this.onEndGetScenarioInfoDelegate, this.onGetScenarioInfoCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LazuriteMobile.Android.ServiceClient.IServer.BeginCalculateScenarioValue(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginCalculateScenarioValue(scenarioId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Lazurite.MainDomain.MessageSecurity.Encrypted<string> LazuriteMobile.Android.ServiceClient.IServer.EndCalculateScenarioValue(System.IAsyncResult result)
        {
            return base.Channel.EndCalculateScenarioValue(result);
        }

        private System.IAsyncResult OnBeginCalculateScenarioValue(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[0]));
            return ((LazuriteMobile.Android.ServiceClient.IServer)(this)).BeginCalculateScenarioValue(scenarioId, callback, asyncState);
        }

        private object[] OnEndCalculateScenarioValue(System.IAsyncResult result)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> retVal = ((LazuriteMobile.Android.ServiceClient.IServer)(this)).EndCalculateScenarioValue(result);
            return new object[] {
                    retVal};
        }

        private void OnCalculateScenarioValueCompleted(object state)
        {
            if ((this.CalculateScenarioValueCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CalculateScenarioValueCompleted(this, new CalculateScenarioValueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void CalculateScenarioValueAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId)
        {
            this.CalculateScenarioValueAsync(scenarioId, null);
        }

        public void CalculateScenarioValueAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, object userState)
        {
            if ((this.onBeginCalculateScenarioValueDelegate == null))
            {
                this.onBeginCalculateScenarioValueDelegate = new BeginOperationDelegate(this.OnBeginCalculateScenarioValue);
            }
            if ((this.onEndCalculateScenarioValueDelegate == null))
            {
                this.onEndCalculateScenarioValueDelegate = new EndOperationDelegate(this.OnEndCalculateScenarioValue);
            }
            if ((this.onCalculateScenarioValueCompletedDelegate == null))
            {
                this.onCalculateScenarioValueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCalculateScenarioValueCompleted);
            }
            base.InvokeAsync(this.onBeginCalculateScenarioValueDelegate, new object[] {
                        scenarioId}, this.onEndCalculateScenarioValueDelegate, this.onCalculateScenarioValueCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LazuriteMobile.Android.ServiceClient.IServer.BeginGetScenarioValue(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetScenarioValue(scenarioId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Lazurite.MainDomain.MessageSecurity.Encrypted<string> LazuriteMobile.Android.ServiceClient.IServer.EndGetScenarioValue(System.IAsyncResult result)
        {
            return base.Channel.EndGetScenarioValue(result);
        }

        private System.IAsyncResult OnBeginGetScenarioValue(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[0]));
            return ((LazuriteMobile.Android.ServiceClient.IServer)(this)).BeginGetScenarioValue(scenarioId, callback, asyncState);
        }

        private object[] OnEndGetScenarioValue(System.IAsyncResult result)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> retVal = ((LazuriteMobile.Android.ServiceClient.IServer)(this)).EndGetScenarioValue(result);
            return new object[] {
                    retVal};
        }

        private void OnGetScenarioValueCompleted(object state)
        {
            if ((this.GetScenarioValueCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetScenarioValueCompleted(this, new GetScenarioValueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetScenarioValueAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId)
        {
            this.GetScenarioValueAsync(scenarioId, null);
        }

        public void GetScenarioValueAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, object userState)
        {
            if ((this.onBeginGetScenarioValueDelegate == null))
            {
                this.onBeginGetScenarioValueDelegate = new BeginOperationDelegate(this.OnBeginGetScenarioValue);
            }
            if ((this.onEndGetScenarioValueDelegate == null))
            {
                this.onEndGetScenarioValueDelegate = new EndOperationDelegate(this.OnEndGetScenarioValue);
            }
            if ((this.onGetScenarioValueCompletedDelegate == null))
            {
                this.onGetScenarioValueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetScenarioValueCompleted);
            }
            base.InvokeAsync(this.onBeginGetScenarioValueDelegate, new object[] {
                        scenarioId}, this.onEndGetScenarioValueDelegate, this.onGetScenarioValueCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LazuriteMobile.Android.ServiceClient.IServer.BeginExecuteScenario(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginExecuteScenario(scenarioId, value, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LazuriteMobile.Android.ServiceClient.IServer.EndExecuteScenario(System.IAsyncResult result)
        {
            base.Channel.EndExecuteScenario(result);
        }

        private System.IAsyncResult OnBeginExecuteScenario(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[0]));
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> value = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[1]));
            return ((LazuriteMobile.Android.ServiceClient.IServer)(this)).BeginExecuteScenario(scenarioId, value, callback, asyncState);
        }

        private object[] OnEndExecuteScenario(System.IAsyncResult result)
        {
            ((LazuriteMobile.Android.ServiceClient.IServer)(this)).EndExecuteScenario(result);
            return null;
        }

        private void OnExecuteScenarioCompleted(object state)
        {
            if ((this.ExecuteScenarioCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExecuteScenarioCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void ExecuteScenarioAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value)
        {
            this.ExecuteScenarioAsync(scenarioId, value, null);
        }

        public void ExecuteScenarioAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, object userState)
        {
            if ((this.onBeginExecuteScenarioDelegate == null))
            {
                this.onBeginExecuteScenarioDelegate = new BeginOperationDelegate(this.OnBeginExecuteScenario);
            }
            if ((this.onEndExecuteScenarioDelegate == null))
            {
                this.onEndExecuteScenarioDelegate = new EndOperationDelegate(this.OnEndExecuteScenario);
            }
            if ((this.onExecuteScenarioCompletedDelegate == null))
            {
                this.onExecuteScenarioCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteScenarioCompleted);
            }
            base.InvokeAsync(this.onBeginExecuteScenarioDelegate, new object[] {
                        scenarioId,
                        value}, this.onEndExecuteScenarioDelegate, this.onExecuteScenarioCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LazuriteMobile.Android.ServiceClient.IServer.BeginAsyncExecuteScenario(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginAsyncExecuteScenario(scenarioId, value, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LazuriteMobile.Android.ServiceClient.IServer.EndAsyncExecuteScenario(System.IAsyncResult result)
        {
            base.Channel.EndAsyncExecuteScenario(result);
        }

        private System.IAsyncResult OnBeginAsyncExecuteScenario(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[0]));
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> value = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[1]));
            return ((LazuriteMobile.Android.ServiceClient.IServer)(this)).BeginAsyncExecuteScenario(scenarioId, value, callback, asyncState);
        }

        private object[] OnEndAsyncExecuteScenario(System.IAsyncResult result)
        {
            ((LazuriteMobile.Android.ServiceClient.IServer)(this)).EndAsyncExecuteScenario(result);
            return null;
        }

        private void OnAsyncExecuteScenarioCompleted(object state)
        {
            if ((this.AsyncExecuteScenarioCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AsyncExecuteScenarioCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void AsyncExecuteScenarioAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value)
        {
            this.AsyncExecuteScenarioAsync(scenarioId, value, null);
        }

        public void AsyncExecuteScenarioAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, object userState)
        {
            if ((this.onBeginAsyncExecuteScenarioDelegate == null))
            {
                this.onBeginAsyncExecuteScenarioDelegate = new BeginOperationDelegate(this.OnBeginAsyncExecuteScenario);
            }
            if ((this.onEndAsyncExecuteScenarioDelegate == null))
            {
                this.onEndAsyncExecuteScenarioDelegate = new EndOperationDelegate(this.OnEndAsyncExecuteScenario);
            }
            if ((this.onAsyncExecuteScenarioCompletedDelegate == null))
            {
                this.onAsyncExecuteScenarioCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAsyncExecuteScenarioCompleted);
            }
            base.InvokeAsync(this.onBeginAsyncExecuteScenarioDelegate, new object[] {
                        scenarioId,
                        value}, this.onEndAsyncExecuteScenarioDelegate, this.onAsyncExecuteScenarioCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LazuriteMobile.Android.ServiceClient.IServer.BeginAsyncExecuteScenarioParallel(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginAsyncExecuteScenarioParallel(scenarioId, value, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LazuriteMobile.Android.ServiceClient.IServer.EndAsyncExecuteScenarioParallel(System.IAsyncResult result)
        {
            base.Channel.EndAsyncExecuteScenarioParallel(result);
        }

        private System.IAsyncResult OnBeginAsyncExecuteScenarioParallel(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[0]));
            Lazurite.MainDomain.MessageSecurity.Encrypted<string> value = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(inValues[1]));
            return ((LazuriteMobile.Android.ServiceClient.IServer)(this)).BeginAsyncExecuteScenarioParallel(scenarioId, value, callback, asyncState);
        }

        private object[] OnEndAsyncExecuteScenarioParallel(System.IAsyncResult result)
        {
            ((LazuriteMobile.Android.ServiceClient.IServer)(this)).EndAsyncExecuteScenarioParallel(result);
            return null;
        }

        private void OnAsyncExecuteScenarioParallelCompleted(object state)
        {
            if ((this.AsyncExecuteScenarioParallelCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AsyncExecuteScenarioParallelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void AsyncExecuteScenarioParallelAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value)
        {
            this.AsyncExecuteScenarioParallelAsync(scenarioId, value, null);
        }

        public void AsyncExecuteScenarioParallelAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, object userState)
        {
            if ((this.onBeginAsyncExecuteScenarioParallelDelegate == null))
            {
                this.onBeginAsyncExecuteScenarioParallelDelegate = new BeginOperationDelegate(this.OnBeginAsyncExecuteScenarioParallel);
            }
            if ((this.onEndAsyncExecuteScenarioParallelDelegate == null))
            {
                this.onEndAsyncExecuteScenarioParallelDelegate = new EndOperationDelegate(this.OnEndAsyncExecuteScenarioParallel);
            }
            if ((this.onAsyncExecuteScenarioParallelCompletedDelegate == null))
            {
                this.onAsyncExecuteScenarioParallelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAsyncExecuteScenarioParallelCompleted);
            }
            base.InvokeAsync(this.onBeginAsyncExecuteScenarioParallelDelegate, new object[] {
                        scenarioId,
                        value}, this.onEndAsyncExecuteScenarioParallelDelegate, this.onAsyncExecuteScenarioParallelCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LazuriteMobile.Android.ServiceClient.IServer.BeginGetChangedScenarios(System.DateTime since, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetChangedScenarios(since, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfoLW> LazuriteMobile.Android.ServiceClient.IServer.EndGetChangedScenarios(System.IAsyncResult result)
        {
            return base.Channel.EndGetChangedScenarios(result);
        }

        private System.IAsyncResult OnBeginGetChangedScenarios(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            System.DateTime since = ((System.DateTime)(inValues[0]));
            return ((LazuriteMobile.Android.ServiceClient.IServer)(this)).BeginGetChangedScenarios(since, callback, asyncState);
        }

        private object[] OnEndGetChangedScenarios(System.IAsyncResult result)
        {
            Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfoLW> retVal = ((LazuriteMobile.Android.ServiceClient.IServer)(this)).EndGetChangedScenarios(result);
            return new object[] {
                    retVal};
        }

        private void OnGetChangedScenariosCompleted(object state)
        {
            if ((this.GetChangedScenariosCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetChangedScenariosCompleted(this, new GetChangedScenariosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetChangedScenariosAsync(System.DateTime since)
        {
            this.GetChangedScenariosAsync(since, null);
        }

        public void GetChangedScenariosAsync(System.DateTime since, object userState)
        {
            if ((this.onBeginGetChangedScenariosDelegate == null))
            {
                this.onBeginGetChangedScenariosDelegate = new BeginOperationDelegate(this.OnBeginGetChangedScenarios);
            }
            if ((this.onEndGetChangedScenariosDelegate == null))
            {
                this.onEndGetChangedScenariosDelegate = new EndOperationDelegate(this.OnEndGetChangedScenarios);
            }
            if ((this.onGetChangedScenariosCompletedDelegate == null))
            {
                this.onGetChangedScenariosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetChangedScenariosCompleted);
            }
            base.InvokeAsync(this.onBeginGetChangedScenariosDelegate, new object[] {
                        since}, this.onEndGetChangedScenariosDelegate, this.onGetChangedScenariosCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LazuriteMobile.Android.ServiceClient.IServer.BeginSaveVisualSettings(Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.UserVisualSettings> visualSettings, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSaveVisualSettings(visualSettings, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LazuriteMobile.Android.ServiceClient.IServer.EndSaveVisualSettings(System.IAsyncResult result)
        {
            base.Channel.EndSaveVisualSettings(result);
        }

        private System.IAsyncResult OnBeginSaveVisualSettings(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.UserVisualSettings> visualSettings = ((Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.UserVisualSettings>)(inValues[0]));
            return ((LazuriteMobile.Android.ServiceClient.IServer)(this)).BeginSaveVisualSettings(visualSettings, callback, asyncState);
        }

        private object[] OnEndSaveVisualSettings(System.IAsyncResult result)
        {
            ((LazuriteMobile.Android.ServiceClient.IServer)(this)).EndSaveVisualSettings(result);
            return null;
        }

        private void OnSaveVisualSettingsCompleted(object state)
        {
            if ((this.SaveVisualSettingsCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveVisualSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void SaveVisualSettingsAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.UserVisualSettings> visualSettings)
        {
            this.SaveVisualSettingsAsync(visualSettings, null);
        }

        public void SaveVisualSettingsAsync(Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.UserVisualSettings> visualSettings, object userState)
        {
            if ((this.onBeginSaveVisualSettingsDelegate == null))
            {
                this.onBeginSaveVisualSettingsDelegate = new BeginOperationDelegate(this.OnBeginSaveVisualSettings);
            }
            if ((this.onEndSaveVisualSettingsDelegate == null))
            {
                this.onEndSaveVisualSettingsDelegate = new EndOperationDelegate(this.OnEndSaveVisualSettings);
            }
            if ((this.onSaveVisualSettingsCompletedDelegate == null))
            {
                this.onSaveVisualSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveVisualSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginSaveVisualSettingsDelegate, new object[] {
                        visualSettings}, this.onEndSaveVisualSettingsDelegate, this.onSaveVisualSettingsCompletedDelegate, userState);
        }

        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }

        private object[] OnEndOpen(System.IAsyncResult result)
        {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }

        private void OnOpenCompleted(object state)
        {
            if ((this.OpenCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void OpenAsync()
        {
            this.OpenAsync(null);
        }

        public void OpenAsync(object userState)
        {
            if ((this.onBeginOpenDelegate == null))
            {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null))
            {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null))
            {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }

        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }

        private object[] OnEndClose(System.IAsyncResult result)
        {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }

        private void OnCloseCompleted(object state)
        {
            if ((this.CloseCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void CloseAsync()
        {
            this.CloseAsync(null);
        }

        public void CloseAsync(object userState)
        {
            if ((this.onBeginCloseDelegate == null))
            {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null))
            {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null))
            {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }

        protected override LazuriteMobile.Android.ServiceClient.IServer CreateChannel()
        {
            return new ServerClientChannel(this);
        }

        private class ServerClientChannel : ChannelBase<LazuriteMobile.Android.ServiceClient.IServer>, LazuriteMobile.Android.ServiceClient.IServer
        {

            public ServerClientChannel(System.ServiceModel.ClientBase<LazuriteMobile.Android.ServiceClient.IServer> client) :
                    base(client)
            {
            }

            public System.IAsyncResult BeginIsScenarioValueChanged(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> lastKnownValue, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[2];
                _args[0] = scenarioId;
                _args[1] = lastKnownValue;
                System.IAsyncResult _result = base.BeginInvoke("IsScenarioValueChanged", _args, callback, asyncState);
                return _result;
            }

            public bool EndIsScenarioValueChanged(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("IsScenarioValueChanged", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetScenariosInfo(System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetScenariosInfo", _args, callback, asyncState);
                return _result;
            }

            public Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfo> EndGetScenariosInfo(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfo> _result = ((Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfo>)(base.EndInvoke("GetScenariosInfo", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetScenarioInfo(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = scenarioId;
                System.IAsyncResult _result = base.BeginInvoke("GetScenarioInfo", _args, callback, asyncState);
                return _result;
            }

            public Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.ScenarioInfo> EndGetScenarioInfo(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.ScenarioInfo> _result = ((Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.ScenarioInfo>)(base.EndInvoke("GetScenarioInfo", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginCalculateScenarioValue(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = scenarioId;
                System.IAsyncResult _result = base.BeginInvoke("CalculateScenarioValue", _args, callback, asyncState);
                return _result;
            }

            public Lazurite.MainDomain.MessageSecurity.Encrypted<string> EndCalculateScenarioValue(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Lazurite.MainDomain.MessageSecurity.Encrypted<string> _result = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(base.EndInvoke("CalculateScenarioValue", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetScenarioValue(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = scenarioId;
                System.IAsyncResult _result = base.BeginInvoke("GetScenarioValue", _args, callback, asyncState);
                return _result;
            }

            public Lazurite.MainDomain.MessageSecurity.Encrypted<string> EndGetScenarioValue(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Lazurite.MainDomain.MessageSecurity.Encrypted<string> _result = ((Lazurite.MainDomain.MessageSecurity.Encrypted<string>)(base.EndInvoke("GetScenarioValue", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginExecuteScenario(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[2];
                _args[0] = scenarioId;
                _args[1] = value;
                System.IAsyncResult _result = base.BeginInvoke("ExecuteScenario", _args, callback, asyncState);
                return _result;
            }

            public void EndExecuteScenario(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("ExecuteScenario", _args, result);
            }

            public System.IAsyncResult BeginAsyncExecuteScenario(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[2];
                _args[0] = scenarioId;
                _args[1] = value;
                System.IAsyncResult _result = base.BeginInvoke("AsyncExecuteScenario", _args, callback, asyncState);
                return _result;
            }

            public void EndAsyncExecuteScenario(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("AsyncExecuteScenario", _args, result);
            }

            public System.IAsyncResult BeginAsyncExecuteScenarioParallel(Lazurite.MainDomain.MessageSecurity.Encrypted<string> scenarioId, Lazurite.MainDomain.MessageSecurity.Encrypted<string> value, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[2];
                _args[0] = scenarioId;
                _args[1] = value;
                System.IAsyncResult _result = base.BeginInvoke("AsyncExecuteScenarioParallel", _args, callback, asyncState);
                return _result;
            }

            public void EndAsyncExecuteScenarioParallel(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("AsyncExecuteScenarioParallel", _args, result);
            }

            public System.IAsyncResult BeginGetChangedScenarios(System.DateTime since, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = since;
                System.IAsyncResult _result = base.BeginInvoke("GetChangedScenarios", _args, callback, asyncState);
                return _result;
            }

            public Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfoLW> EndGetChangedScenarios(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfoLW> _result = ((Lazurite.MainDomain.MessageSecurity.EncryptedList<Lazurite.MainDomain.ScenarioInfoLW>)(base.EndInvoke("GetChangedScenarios", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginSaveVisualSettings(Lazurite.MainDomain.MessageSecurity.Encrypted<Lazurite.MainDomain.UserVisualSettings> visualSettings, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = visualSettings;
                System.IAsyncResult _result = base.BeginInvoke("SaveVisualSettings", _args, callback, asyncState);
                return _result;
            }

            public void EndSaveVisualSettings(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("SaveVisualSettings", _args, result);
            }
        }
    }
}